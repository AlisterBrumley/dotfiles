#! /bin/bash

printf "This will set the bash prompt, do you wish to continue (y* to confirm?) " 
read answer

# this line is confusing
# ${answer#[Yy]} is a function that strips prefix
# we're comparing the var string to the var string after any Y/y prefix strip
if [ $answer = "${answer#[Yy]}" ]; then
	exit 1
fi

# sets the user home to the calling user, not root
USER_HOME=$(getent passwd ${SUDO_USER:-$USER} | cut -d: -f6)

if [ -f ~/.bashrc ]; then
    echo "PS1=\"\[\e[94m\]\u@\h \[\e[92m\]\D{%d/%m/%y %H:%M:%S} \[\e[35m\]\w\[\e[00m\] \[\e[1;34m\]\\$\[\e[00m\] \"" >> $USER_HOME/.bashrc
	echo "wrote to ~/.bashrc"
	tput bel
else
    echo ".bashrc not found or permissions issue"
	if [ -f ~/.bash_profile ]; then
		echo "PS1=\"\[\e[94m\]\u@\h \[\e[92m\]\D{%d/%m/%y %H:%M:%S} \[\e[35m\]\w\[\e[00m\] \[\e[1;34m\]\\$\[\e[00m\] \""  >> $USER_HOME/.bash_profile
		echo "wrote to ~/.bash_profile"
		tput bel
	else
		echo ".bash_profile not found or permissions issue"
		if [ -f ~/.profile ]; then
			echo "PS1=\"\[\e[94m\]\u@\h \[\e[92m\]\D{%d/%m/%y %H:%M:%S} \[\e[35m\]\w\[\e[00m\] \[\e[1;34m\]\\$\[\e[00m\] \""  >> $USER_HOME/.bash_profile
			echo "wrote to ~/.bash_profile"
			tput bel
		else
			echo ".profile not found or permissions issue"
		fi
	fi
fi
